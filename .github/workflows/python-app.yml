# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    environment: dev
    env:
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
      APP_NAME: ${{ secrets.APP_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      OTP_SECRET_KEY: ${{ secrets.OTP_SECRET_KEY }}
      OTP_EXPIRE_SECONDS: ${{ secrets.OTP_EXPIRE_SECONDS }}
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
      SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      USE_LOCAL_FALLBACK: ${{ secrets.USE_LOCAL_FALLBACK }}
      
    steps:
    - name: Debug environment variables
      run: |
        echo "ACCESS_TOKEN_EXPIRE_MINUTES: $ACCESS_TOKEN_EXPIRE_MINUTES"
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi
    - name: Remove existing sqlite database
      run: |
        rm -rf backend/fast_store.db
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python backend/demo.py
        pytest 
